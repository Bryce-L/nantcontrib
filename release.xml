<?xml version="1.0"?>
<project name="nant" default="build-release-self">
    <!-- set project.version to current date/time in yyyyMMdd format -->
    <tstamp property="project.version" pattern="yyyyMMdd" />
    <property name="sf.net.ssh.server" value="shell1.sf.net" />
    <property name="sf.net.web.path" value="/home/groups/n/na/nantcontrib/htdocs" />
    <!-- include master build file -->
    <include buildfile="nantcontrib.build" />
    <!-- retrieve system information and environment variables -->
    <sysinfo />
    <!-- setup property that holds partial path to be used by scp -->
    <property name="serverpart" value="${sys.env.USERNAME}@${sf.net.ssh.server}:${sf.net.web.path}" />
    <!-- perform a 'release' package and upload to sf.net -->
    <target name="build-release-self" depends="set-net-1.0-runtime-configuration, release, package, deploy" description="Perform a 'release' package and uploads to sf.net" />
    <!-- perform a 'release' package and upload to sf.net -->
    <target name="build-release" depends="set-net-1.0-runtime-configuration" description="Perform a 'release' package and uploads to sf.net">
        <property name="NAntReleaseEXE" value="${nant.dir}/bin/nant.exe" />
        <available property="NAntReleaseEXEExists" resource="${NAntReleaseEXE}" type="File" />
        <ifnot propertyexists="NAntReleaseEXEExists" propertytrue="NAntReleaseEXEExists">
            <fail message="Please pass a valid NAnt installation directory on the commandline using a nant.dir property." />
        </ifnot>
        <exec program="${NAntReleaseEXE}">
            <arg value="-buildfile:release.xml" />
            <arg value="-D:nant.dir=${nant.dir}" />
            <arg value="-k:${nant.settings.currentframework}" />
        </exec>
    </target>
    <!-- deploy content to sourceforge -->
    <target name="deploy" depends="deploy-help, deploy-web" />
    <!-- copy help to sourceforge -->
    <target name="deploy-help" depends="set-net-1.0-runtime-configuration, package">
        <!-- make sure the directory tree exists -->
        <exec program="ssh">
            <arg value="${sf.net.ssh.server}" />
            <arg value="mkdir --mode=775 --parents ${sf.net.web.path}/help" />
        </exec>
        <!-- try to remove existing files and directories -->
        <exec program="ssh" failonerror="false">
            <arg value="${sf.net.ssh.server}" />
            <arg value="rm -R --force ${sf.net.web.path}/help/*" />
        </exec>
        <!-- copy the help to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/doc/help" program="scp">
            <arg value="-r" />
            <arg value="-C" />
            <arg value="*" />
            <arg value="${serverpart}/help" />
        </exec>
        <!-- make sure permissions are set right -->
        <exec program="ssh" failonerror="false">
            <arg value="${sf.net.ssh.server}" />
            <arg value="chmod -R 775 ${sf.net.web.path}/help" />
        </exec>
    </target>
    <!-- copy website to sourceforge -->
    <target name="deploy-web" depends="set-net-1.0-runtime-configuration, package">
        <!-- make sure the directory tree exists -->
        <exec program="ssh">
            <arg value="${sf.net.ssh.server}" />
            <arg value="mkdir --mode=775 --parents ${sf.net.web.path}" />
        </exec>
        <!-- try to remove existing files -->
        <exec program="ssh" failonerror="false">
            <arg value="${sf.net.ssh.server}" />
            <arg value="find ${sf.net.web.path} -maxdepth 1 -type f -exec rm --force {} \;" />
        </exec>
        <!-- copy stylesheet to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/doc" program="scp">
            <arg value="-C" />
            <arg value="style.css" />
            <arg value="${serverpart}" />
        </exec>
        <!-- copy arrow.gif to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/doc" program="scp">
            <arg value="-C" />
            <arg value="arrow.gif" />
            <arg value="${serverpart}" />
        </exec>
        <!-- copy bullet.gif to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/doc" program="scp">
            <arg value="-C" />
            <arg value="bullet.gif" />
            <arg value="${serverpart}" />
        </exec>
        <!-- copy index.html to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/doc" program="scp">
            <arg value="-C" />
            <arg value="index.html" />
            <arg value="${serverpart}" />
        </exec>
        <!-- copy index.html to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/doc" program="scp">
            <arg value="-C" />
            <arg value="license.html" />
            <arg value="${serverpart}" />
        </exec>
        <!-- make sure permissions are set right -->
        <exec program="ssh" failonerror="false">
            <arg value="${sf.net.ssh.server}" />
            <arg value="find ${sf.net.web.path} -maxdepth 1 -type f -exec chmod 775 {} \;" />
        </exec>
    </target>
</project>
