<?xml version="1.0"?>
<!--*****************************************************************-->
<!--* @(#)NAntContrib.build                                         *-->
<!--*                                                               *-->  
<!--* Builds the NAntContrib Project                                *-->
<!--*****************************************************************-->
<project name="NAntContrib" default="build">

    <tstamp/>
    <property name="debug" value="true"/>
    <property name="project.name" value="nantcontrib"/>
    <property name="project.FormalName" value="NAnt.Contrib"/>
    <property name="project.version" value="0.0.1.0"/>

    <property name="src.dir" value="src"/>
    <property name="tests.dir" value="Tests"/>
	
	<property name="build.dir" value="${nant.project.basedir}/build/${project.name}-${project.version}-release" />
	
	<if propertytrue="debug">
		<property name="build.dir" value="${nant.project.basedir}/build/${project.name}-${project.version}-debug" />
	</if>
    
    <property name="dist.dir" value="dist"/>
    
    <!-- this target must be defined before that call below it! -->
    <target name="UpdateNAntReleaseFiles">
		<available property="NAntReleaseExists" resource="${nant.dir}" type="Directory"/>
		<ifnot propertyexists="NAntReleaseExists" propertytrue="NAntReleaseExists">
			<echo>
Missing '${nant.dir}' Folder!
Creating folder and getting file from NAnt Nightly Build (${nant.releasebuild.name})!
			</echo>
			<mkdir dir="${nant.dir}"/>
			<get dest="${nant.releasebuild.name}.zip" src="http://nant.sourceforge.net/builds/${nant.releasebuild.name}.zip"/>
			<unzip zipfile="${nant.releasebuild.name}.zip"/>
			<move todir="${nant.dir}">
				<fileset basedir="${nant.releasebuild.name}">
					<includes name="**"/>
				</fileset>
			</move>
			<delete dir="nant-20030417" failonerror="false"/>
			<delete file="nant-20030417.zip" failonerror="false"/>
		</ifnot>
    </target>
    
    <!-- Used to build against. This directory must exist or it will be created. -->
    <property name="nant.dir" value="NAntRelease" />
    <property name="nant.releasebuild.name" value="nant-20030417"/>
    <call target="UpdateNAntReleaseFiles"/>
    
    <property name="nant-bin.dir" value="${nant.dir}/bin"/>
    <property name="nant-doc.dir" value="${nant.dir}/doc" />
    <property name="nant.extra-tasks.dir" value="${nant-bin.dir}" />
    <echo message="Using nant files from ${nant.dir}"/>

    <property name="backup.name" value="..\${project.name}-backup-${tstamp.date}-${tstamp.time}.zip" />

    <include buildfile="NAntContribInstall.include" />
    <include buildfile="Tools/SLiNgshoT/SLiNgshoTInstall.include" />
    


    <!--*****************************************************************-->
    <!--* Clean the outputs                                             *-->
    <!--*****************************************************************-->
    <target name="clean" description="cleans up everything">

        <delete dir="${build.dir}" failonerror="false"/>
        <delete dir="${dist.dir}" failonerror="false"/>
        <if propertyexists="${dist.name}">
			<delete file="${dist.name}" failonerror="false"/>
		</if>
    </target>
    
    <!--*****************************************************************-->
    <!--* Rebuild the solution from scratch, test, and create docs      *-->
    <!--*****************************************************************-->
    <target name="all" description="make a full, clean rebuild">

      <call target="clean"/> 
      <call target="build"/>
      <call target="buildtests"/>
      <call target="test"/>
      <call target="doc"/>
    </target>
    
    <!--*****************************************************************-->
    <!--* Build the solution, then test                                 *-->
    <!--*****************************************************************-->
    <target name="buildandtest" description="make a full, clean rebuild">

      <call target="build"/>
      <call target="buildtests"/>
      <call target="test"/>
    </target>

    <!--*****************************************************************-->
    <!--* Prepare directories and build settings                        *-->
    <!--*****************************************************************-->
    <target name="prepare">

      <mkdir dir="${build.dir}"/>
      <mkdir dir="${dist.dir}"/>
      <copy todir="${build.dir}">
            <fileset basedir="bin">
                <includes name="CollectionGen.dll"/>
                <includes name="SourceSafe.Interop.dll"/>
                <includes name="Interop.StarTeam.dll"/>
                <includes name="Interop.WindowsInstaller.dll"/>
                <includes name="Interop.MsmMergeTypeLib.dll"/>
		        <includes name="MSITaskErrors.mst"/>
		        <includes name="MSITaskTemplate.msi"/>
		        <includes name="MSMTaskErrors.mst"/>
		        <includes name="MSMTaskTemplate.msm"/>
            </fileset>
      </copy>
    </target>

    <!--*****************************************************************-->
    <!--* Bootstrap the Xsd Task                                        *-->
    <!--*****************************************************************-->
    <target name="compile.schematask" description="compiles the Xsd task">
    
        <csc target="library" output="${build.dir}\NAnt.Xsd.Tasks.dll" doc="${build.dir}\NAnt.Xsd.Tasks.xml" >
            <sources basedir="${src.dir}">
                <includes name="Tasks/XsdTask.cs"/>
            </sources>
            <references>
                <includes name="${nant-bin.dir}\NAnt.Core.dll"/>
                <includes name="${nant-bin.dir}\NAnt.DotNetTasks.dll"/>
            </references>
            <arg value="/nowarn:1591"/>
        </csc>
    </target>
    
    <!--*****************************************************************-->
    <!--* Bootstrap XML Schemas into assemblies for task validation     *-->
    <!--*****************************************************************-->
    <target name="compile.schemas" depends="compile.schematask" description="compiles Task XML Schemas into assemblies">
		
		<loadtasks assembly="${build.dir}\NAnt.Xsd.Tasks.dll"/>

		<if uptodate="${src.dir}\Tasks\MSITask.xsd">
			<comparefiles basedir="${build.dir}\Schemas\MSI">
				<includes name="*"/>
			</comparefiles>
			
			<mkdir dir="${build.dir}\Schemas\MSI" />
			<xsd schema="${src.dir}\Tasks\MSITask.xsd" 
				language="CS" namespace="NAnt.Contrib.Schemas.MSI" nologo="true" 
				outputdir="${build.dir}\Schemas\MSI" uri="NAnt.Contrib.Tasks.MSITask" />	
		</if>

		<if uptodate="${src.dir}\Tasks\MSMTask.xsd">
			<comparefiles basedir="${build.dir}\Schemas\MSM">
				<includes name="*"/>
			</comparefiles>
			
			<mkdir dir="${build.dir}\Schemas\MSM" />
			<xsd schema="${src.dir}\Tasks\MSMTask.xsd" 
				language="CS" namespace="NAnt.Contrib.Schemas.MSM" nologo="true" 
				outputdir="${build.dir}\Schemas\MSM" uri="NAnt.Contrib.Tasks.MSMTask" />	
		</if>
		
		<csc target="library" output="${build.dir}\NAnt.Contrib.Schemas.dll">
            <sources basedir="${build.dir}\Schemas">
                <includes name="**.cs"/>
            </sources>
            <arg value="/nowarn:1591,1595"/>
        </csc>
    </target>

    <!--*****************************************************************-->
    <!--* Build the NAnt.Contrib.Tasks.dll library                      *-->
    <!--*****************************************************************-->
    <target name="build" depends="prepare, prepare.slingshot, compile.schemas" description="compiles the source code">
    
        <csc target="library" debug="${debug}" 
            output="${build.dir}\${project.FormalName}.Tasks.dll" 
            doc="${build.dir}\${project.FormalName}.Tasks.xml">
            <sources>
                <includes name="${src.dir}\**.cs"/>
                <includes name="${build.dir}\Schemas\**.cs" />
            </sources>
            <references>
                <includes name="${nant-bin.dir}\NAnt.Core.dll"/>
                <includes name="${nant-bin.dir}\NAnt.DotNetTasks.dll"/>
                <includes name="${nant-bin.dir}\NUnitCore.dll"/>
                <includes name="bin\CollectionGen.dll"/>
                <includes name="bin\SourceSafe.Interop.dll"/>
                <includes name="bin\Interop.StarTeam.dll"/>
                <includes name="bin\Interop.WindowsInstaller.dll"/>
                <includes name="bin\Interop.MsmMergeTypeLib.dll"/>
                <includes name="${build.dir}\SLiNgshoT.Core.dll"/>
                <includes name="${build.dir}\NAnt.Contrib.Schemas.dll"/>
            </references>
            <resources>
                <includes name="${src.dir}\xsl\*.*"/>
		    <includes name="${build.dir}\Schemas\**.resources" />
            </resources>
            <arg value="/nowarn:1591,1595"/>
        </csc>
        <!--
        <delete dir="${build.dir}\Schemas" />
        <delete file="${build.dir}\NAnt.Contrib.Schemas.dll" />
        -->
    </target>

    <!--*****************************************************************-->
    <!--* Build the SLiNgshoT.Core.dll assemblies                       *-->
    <!--*****************************************************************-->
    <target name="prepare.slingshot" description="Compiles and copies the SLiNgshoT assemblies">

      <nant buildfile="Tools/SLiNgshoT/SLiNgshoT.build" target="Release"/>
      <copy file="Tools/SLiNgshoT/build/Release/SLiNgshoT.Core.dll" tofile="${build.dir}/SLiNgshoT.Core.dll"/>
      <copy file="Tools/SLiNgshoT/build/Release/SLiNgshoT.exe" tofile="${build.dir}/SLiNgshoT.exe"/>
    </target>

    <!--*****************************************************************-->
    <!--* Build the unit tests library                                  *-->
    <!--*****************************************************************-->
    <target name="buildtests" depends="build" description="Compiles the NUnit Tests">

        <csc target="library" output="${build.dir}\${project.FormalName}.Tests.dll" debug="${debug}">
            <sources basedir="${tests.dir}">
                <includes name="**/*.cs"/>
            </sources>
            <references>
                <includes name="${nant-bin.dir}/nunit.framework.dll"/>
                <includes name="${nant-bin.dir}/NAnt.Core.dll"/>
                <includes name="${nant-bin.dir}/NAnt.Core.Tests.dll"/>
                <includes name="${build.dir}/${project.FormalName}.Tasks.dll"/>
            </references>
            <arg value="/nowarn:1591"/>
        </csc>
    </target>

    <!--*****************************************************************-->
    <!--* Perform unit tests.  If a unit test fails, the build fails.   *-->
    <!--* The base directory is set to the Test directory so that tests *-->
    <!--* can easily load external data files wihtout having to worry   *-->
    <!--* about complicated paths.                                      *-->
    <!--*****************************************************************-->
    <target name="test" depends="buildtests" description="run unit tests">
		<nunit2>
			<test assemblyname="${build.dir}\${project.FormalName}.Tests.dll" />
		</nunit2>
<!--
        <nunit basedir="${tests.dir}" verbose="false" haltonerror="true" haltonfailure="true">
            <formatter type="Xml"/>
            <formatter type="Plain"/>
            <test class="NAnt.Contrib.Tests.AllTests" assembly="${build.dir}\${project.FormalName}.Tests.dll" outfile="${build.dir}\${project.FormalName}.Tests.Results" />
        </nunit>
-->
    </target>

    <!--*****************************************************************-->
    <!--* Archive a .zip backup of the source                           *-->
    <!--*****************************************************************-->
    <target name="backup" depends="clean" description="make local backup">

        <echo message="Creating backup ${backup.name}"/>
        <zip zipfile="${backup.name}">
            <fileset basedir=".">
                <includes name="**"/>
            </fileset>
        </zip>
    </target>

    <!--*****************************************************************-->
    <!--* Build user	documentation                                   *-->
    <!--*****************************************************************-->    
	<target name="userdoc" depends="">

		<!-- use ndoc and NDoc.Documenter.NAnt to build user doc -->
        <ndoc>
            <assemblies basedir="${build.dir}">
                <includes name="*Tasks.dll"/>
            </assemblies>
            <documenters>
                <documenter name="NAntTask">
                    <property name="OutputDirectory" value="${build.dir}/doc/help/tasks" />                                                      
                </documenter>
            </documenters>
        </ndoc>
        <!-- copy images so we can preview userdoc and have it look right -->
        <copy file="${nant-doc.dir}/style.css" todir="${build.dir}/doc" />
        <copy file="${nant-doc.dir}/arrow.gif" todir="${build.dir}/doc" />
        <echo message="Preview task references: file://${build.dir}/doc/help/tasks/index.html"/>
    </target>
	
    <!--*****************************************************************-->
    <!--* Build NDoc documentation                                      *-->
    <!--*****************************************************************-->
    <target name="doc" depends="build" description="build documentation">

        <echo message="Requires HtmlHelp compiler (hhc.exe) to be in the system path"/>
        <ndoc failonerror="false">
            <assemblies basedir="${build.dir}">
                <includes name="NAnt.Contrib.Tasks.dll"/>
            </assemblies>
            <documenters>
                <documenter name="MSDN">
                    <property name="OutputDirectory" value="${build.dir}\docs\MSDN" />
                    <property name="HtmlHelpName" value="NAntContrib" />
                    <property name="HtmlHelpCompilerFilename" value="hhc.exe" />
                    <property name="IncludeFavorites" value="False" />
                    <property name="Title" value="An NDoc Documented Class Library" />
                    <property name="SplitTOCs" value="False" />
                    <property name="DefaulTOC" value="" />
                    <property name="ShowVisualBasic" value="True" />
                    <property name="ShowMissingSummaries" value="True" />
                    <property name="ShowMissingRemarks" value="True" />
                    <property name="ShowMissingParams" value="True" />
                    <property name="ShowMissingReturns" value="True" />
                    <property name="ShowMissingValues" value="True" />
                    <property name="DocumentInternals" value="False" />
                    <property name="DocumentProtected" value="True" />
                    <property name="DocumentPrivates" value="False" />
                    <property name="DocumentEmptyNamespaces" value="False" />
                    <property name="IncludeAssemblyVersion" value="False" />
                    <property name="CopyrightText" value="" />
                    <property name="CopyrightHref" value="" />
                 </documenter>             
            </documenters> 
        </ndoc>
        <copy file="${build.dir}/docs/MSDN/NAntContrib.chm" todir="${build.dir}"/>
    </target>

</project>
